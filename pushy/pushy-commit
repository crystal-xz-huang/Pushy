#!/bin/dash

# saves a copy of all files in the index to the repository along with a commit message
# commits are numbered sequentially, starting at 0
# usage: pushy-commit [-a] -m commit-message

# check if the .pushy repository exists
if [ ! -d ".pushy" ]
then
    echo "pushy-commit: error: pushy repository directory .pushy not found" >&2
    exit 1
fi

# check the arguments are valid
case "$1" in 
-a)
    # usage: pushy-commit -a -m commit-message
    if [ "$2" != "-m" ] || [ "$#" -ne 3 ] || [ -z "$3" ] || (echo "$3" | grep -Eq "^-[a-zA-Z]*$") 
    then
        echo "usage: pushy-commit [-a] -m commit-message" >&2
        exit 1
    fi 
    COMMIT_MSG="$3"
    ;;
-m) 
    # usage: pushy-commit -m commit-message
    if [ "$#" -ne 2 ] || [ -z "$2" ] || (echo "$2" | grep -Eq "^-[a-zA-Z]*$") 
    then
        echo "usage: pushy-commit [-a] -m commit-message" >&2
        exit 1
    fi
    COMMIT_MSG="$2"
    ;;
*)
    # if the first argument is not -a or -m
    echo "usage: pushy-commit [-a] -m commit-message" >&2
    exit 1
    ;;
esac

BRANCH=$(cat .pushy/HEAD)
INDEX_DIR=".pushy/index"
COMMIT_DIR=".pushy/commits/$BRANCH"

# get the last commit number for the current branch
last_commit_num=$(cat .pushy/branches/"$BRANCH")
if [ -z "$last_commit_num" ]; then
    last_commit_num=-1
fi

# get the new commit number
# if the commit message file is empty, then the new commit number is 0
if [ ! -s .pushy/COMMIT_EDITMSG ]; then
    new_commit_num=0
else
    last_commit=$(cat .pushy/COMMIT_EDITMSG | cut -d ' ' -f1)
    new_commit_num=$((last_commit + 1))
fi

num_tracked_files=$(find "$INDEX_DIR" -mindepth 1 -maxdepth 1 -type f | wc -l)

# if the index is empty and there are no commits, then there are no files to commit
if [ "$last_commit_num" -eq -1 ] && [ "$num_tracked_files" -eq 0 ]; then
    echo "nothing to commit"
    exit 0
fi

if [ "$1" = "-a" ]; then
    # check if there is anything to commit
    nothing_to_commit=0
    while [ "$nothing_to_commit" -eq 0 ]; do
        # if there are no commits and the index is not empty, then there are differences between the index and the cwd
        if [ "$last_commit_num" -eq -1 ] && [ "$num_tracked_files" -gt 0 ]; then
            nothing_to_commit=1
            break
        fi

        # index vs last commit
        if [ "$last_commit_num" -ge 0 ]; then
            if ! diff "$INDEX_DIR" "$COMMIT_DIR/$last_commit_num" > /dev/null; then
                nothing_to_commit=1
                break
            fi
        fi

        # index vs cwd
        if [ "$num_tracked_files" -gt 0 ]; then
            for file in "$INDEX_DIR"/*; do
                filename=$(basename "$file")
                if [ -f "$filename" ] && ! diff "$filename" "$file" > /dev/null; then
                    # if the file is in the cwd and the index, but they are different
                    nothing_to_commit=1
                    break
                elif [ ! -f "$filename" ]; then
                    # if the file is in the index but not in the cwd
                    nothing_to_commit=1
                    break
                fi
            done
        fi

        break
    done

    # no differences between the index and the last commit or the cwd
    if [ "$nothing_to_commit" -eq 0 ]; then
        echo "nothing to commit"
        exit 0
    fi

    # if there are differences between the index and the last commit or the cwd, then add all tracked files to the index
    if [ "$num_tracked_files" -gt 0 ]; then
        for file in "$INDEX_DIR"/*; do
            filename=$(basename "$file")
            if [ ! -f "$filename" ]
            then
                # if the file is not in the current directory but is in the index, remove it from the index
                rm "$file" || exit 1
            else 
                # if the file is in the current directory and the index, update the index with the current file
                cp "$filename" "$file" || exit 1
            fi
        done
    fi
fi

if [ "$1" = "-m" ]; then
    # if -m is used, check if there are any differences between the index and the last commit (if there are any commits)
    if [ "$last_commit_num" -ge 0 ]; then
        if diff "$INDEX_DIR" "$COMMIT_DIR/$last_commit_num" > /dev/null; then
            echo "nothing to commit" 
            exit 0
        fi
    fi
fi

# create a new commit directory named with its commit number
mkdir "$COMMIT_DIR/$new_commit_num" || exit 1

# copy all files in the index to the new commit directory (overwrite any existing files)
# if the index is empty and there are commits, then commit the file deletions (i.e. new commit is empty -> don't copy anything)
num_index_files=$(find "$INDEX_DIR" -mindepth 1 -maxdepth 1 -type f | wc -l)
if [ "$num_index_files" -gt 0 ]; then
    for file in "$INDEX_DIR"/*; do
        filename=$(basename "$file")
        cp "$file" "$COMMIT_DIR/$new_commit_num" || exit 1
    done
fi


# save the commit message to the commit message file
echo "$new_commit_num $COMMIT_MSG" > .pushy/COMMIT_EDITMSG

# save the commit message to the log file for the current branch (append to the end of the file)
echo "$new_commit_num $COMMIT_MSG" >> ".pushy/logs/$BRANCH"

# update the last commit for the current branch in the branches file
echo "$new_commit_num" > ".pushy/branches/$BRANCH"

echo "Committed as commit $new_commit_num"

exit 0

